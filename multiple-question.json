{
"questions" : [
  {
  "questionId": 1,
  "type": "java 17",
  "question": "Which of the following methods compile? (Choose all that apply.)",
  "options": [
    {
      "optionId": "A",
      "description": "public void january() { return; }",
      "sequence": 1
    },
    {
      "optionId": "B",
      "description": "public int february() { return null;}",
      "sequence": 2
    },
    {
      "optionId": "C",
      "description": "public void march() {}",
      "sequence": 3
    },
    {
      "optionId": "D",
      "description": "public int april() { return 9;}",
      "sequence": 4
    },
    {
      "optionId": "E",
      "description": "public int may() { return 9.0;}",
      "sequence": 5
    },
    {
      "optionId": "F",
      "description": "public int june() { return;}",
      "sequence": 6
    }
  ],
  "answer" : ["A","B"]
},
  {
    "questionId": 2,
    "type": "java 17",
    "question": "What could be the output of the following? Predicate<String> predicate = s -> s.startsWith(g);var stream1 = Stream.generate(() ->\n\"growl!\");\nvar stream2 = Stream.generate(() ->\n\"growl!\");\nvar b1 = stream1.anyMatch(predicate);\nvar b2 = stream2.allMatch(predicate);\nSystem.out.println(b1 + \" \" + b2);",
    "options": [
      {
        "optionId": "A",
        "description": "true false",
        "sequence": 1
      },
      {
        "optionId": "B",
        "description": "true true",
        "sequence": 2
      },
      {
        "optionId": "C",
        "description": "java.util.stream.ReferencePipeline$3@4517d9a3",
        "sequence": 3
      },
      {
        "optionId": "D",
        "description": "The code does not compile.",
        "sequence": 4
      },
      {
        "optionId": "E",
        "description": "An exception is thrown.",
        "sequence": 5
      },
      {
        "optionId": "F",
        "description": "The code hangs.",
        "sequence": 6
      }
    ],
    "answer" : ["A","B"]
  }

]
}
